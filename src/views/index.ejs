<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="icon" href="https://cdn2.iconfinder.com/data/icons/real-estate-1-12/50/13-512.png" type="image/png">
  <title>Tiny Store</title>
</head>

<body>
  <nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand mb-0 h1">Tiny Store</a>
      <% if (session.token) { %>
        <form action="/auth/signout" method="POST" id="logoutForm" style="display: inline;">
          <button type="submit" class="btn btn-primary">Logout</button>
        </form>
        <% } else { %>
          <div class="d-flex">
            <a href="/signin" class="btn btn-primary">Sign In</a>
          </div>
          <% } %>
    </div>
  </nav>
  <div class="container">
    <h1 class="mt-5 text-center">Welcome to Tiny Store</h1>
    <!--PRODUCTS-->
    <section>

      <div class="container">
        <h1 class="mt-5">Products</h1>
        <div id="product-list" class="row"></div>
        <button id="buy" class="btn btn-success mt-3" onclick="buyProducts()">Buy Selected Products</button>
      </div>

      <script>
        async function fetchProducts() {
          const response = await fetch(`/graphql`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              query: `query {
                        products {
                            id
                            name
                            description
                            price
                            imageUrl
                        }
                    }`,
            }),
          });

          const result = await response.json();
          const products = result.data.products;

          const productList = document.getElementById('product-list');
          productList.innerHTML = products.map(product => `
                <div class="col-md-4">
                    <div class="card mb-3">
                        <img src="${product.imageUrl || 'placeholder.jpg'}" class="card-img-top" alt="${product.name}">
                        <div class="card-body">
                            <h5 class="card-title">${product.name}</h5>
                            <p class="card-text">${product.description}</p>
                            <p class="card-text"><strong>Price: $${product.price}</strong></p>
                            <button class="btn btn-primary" onclick="addToCart('${product.id}')">Add to Cart</button>
                            <button class="btn btn-warning" onclick="likeProduct('${product.id}')">Like</button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        async function addToCart(productId) {
          await fetch(`/graphql`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              query: `mutation {
                        addToCart(productId: "${productId}")
                    }`,
            }),
          });
          alert('Product added to cart!');
        }

        async function likeProduct(productId) {
          await fetch(`/graphql`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              query: `mutation {
                        likeProduct(productId: "${productId}")
                    }`,
            }),
          });
          alert('Product liked!');
        }

        async function buyProducts() {
          const response = await fetch(`/graphql`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              query: `mutation {
                        buyProducts
                    }`,
            }),
          });

          const result = await response.json();
          alert(result.data.buyProducts);
        }

        // Initial fetch
        fetchProducts();
      </script>
    </section>
  </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
  integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
  integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>

</html>