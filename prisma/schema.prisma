datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  MANAGER
  CLIENT
}

enum SnackCategory {
  CHIPS
  CANDY
  NUTS
  GRANOLA_BARS
  DRIED_FRUITS
  POPCORN
  SAVORY_SNACKS
  BAKED_GOODS
  HEALTH_SNACKS
  BEVERAGES
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role
  manager   Manager? @relation
  client    Client?  @relation
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Manager {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [managerId], references: [id])
  products  Product[]
  managerId String    @unique
}

model Client {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  cart   Cart?   @relation
  cartId Int
  orders Order[]
  userId String  @unique
  Like   Like[]
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  price       Float
  category    SnackCategory
  isActive    Boolean       @default(true)
  manager     Manager       @relation(fields: [managerId], references: [id])
  managerId   Int
  images      Image[]
  likes       Like[]
  CartItem    CartItem[]
  Order       Order[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int     @id @default(autoincrement())
  client    Client  @relation(fields: [clientId], references: [id])
  clientId  Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Cart {
  id        Int        @id @default(autoincrement())
  client    Client     @relation(fields: [clientId], references: [id])
  clientId  Int        @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  Cart      Cart?    @relation(fields: [cartId], references: [id])
  cartId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        Int      @id @default(autoincrement())
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  total     Float
  discount  Float
}
